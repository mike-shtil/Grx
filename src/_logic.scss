////////////////////
//container children
////////////////////

.#{$row}, .#{$row} > * {
    // flex-grow: 0;
    // flex-shrink: 1;
    box-sizing: border-box;
}
//default (null) breakpoint
@media all and (min-width: 0) {
    //default base
    .#{$col}, .#{$row} {
        @for $n from 1 through $base_default {
            > .#{$size}-#{$n} {
                flex-basis: percentage($n / $base_default);
            }
        }
        //dynamic bases
        @each $base in $bases {
             @for $n from 1 through $base{
                > .#{$size}-#{$n}-#{$base} {
                    flex-basis: percentage($n / $base);
                }
            }
        }
    }
}
//dynamic breakpoints
@each $bpname, $bpvalue in $breakpoints {
     @media all and (min-width: #{$bpvalue}){
        .#{$col}, .#{$row} {
            //default base
            @for $n from 1 through $base_default {
                > .#{$size}-#{$bpname}-#{$n} {
                    flex-basis: percentage($n / $base_default);
                }
            }
            //dynamic bases
            @each $base in $bases {
                 @for $n from 1 through $base{
                    > .#{$size}-#{$bpname}-#{$n}-#{$base} {
                        flex-basis: percentage($n / $base);
                    }
                }
            }
        }
    }
}
/////////////////
//general element
/////////////////

.#{$col}, .#{$row} {
    display: flex;
    box-sizing: border-box;
    ////////
    //gutter
    ////////
    &[class*="gutter-"] {
        &:after,
        &:before {
            content: '';
        }
    }
    @each $name, $value in $gutters {
        &.gutter-#{$name} {
            &:not(.wrap) {
                overflow: hidden;

                &:after,
                &:before {
                    //offset for gutter on external elements;
                    margin-left: -$value/2;
                }

                > * {
                    margin-right: $value/2;
                    margin-left: $value/2;
                }
            }

            &.wrap {
                margin: -$value/2;

                > * {
                    padding: $value/2;
                }
            }
        }
    }

    &.wrap {
        flex-wrap: wrap;
    }

    &.center {
        @extend %justify-center;
        @extend %align-center;
    }
    //deprecated
    &.align-start {
        @extend %align-start;
    }

    &.align-center {
        @extend %align-center;
    }

    &.align-end {
        @extend %align-end;
    }

    &.justify-start {
        @extend %justify-start;
    }

    &.justify-center {
        @extend %justify-center;
    }

    &.justify-end {
        @extend %justify-end;
    }

    &[class*="-between"] {
        justify-content: space-between;
    }

    &[class*="-around"] {
        justify-content: space-around;
    }

    > .#{$size}-auto {
        //column which takes up entire remaining free space (width) in the row
        flex: 2 2 auto;
    }
}

.#{$row} {
    &[class*="#{$items}-"] {
        &[class*="-right"] {
            @extend %justify-end;
        }

        &[class*="-center"] {
            @extend %justify-center;
        }

        &[class*="-left"] {
            @extend %justify-start;
        }

        &[class*="-bottom"] {
            @extend %align-end;
        }

        &[class*="-middle"] {
            @extend %align-center;
        }

        &[class*="-top"] {
            @extend %align-start;
        }
    }

     > .pull-left,
    > .pull-start {
        margin-right: auto !important;
    }

     > .pull-right,
    > .pull-end {
        margin-left: auto !important;
    }
}

.#{$col} {
    flex-direction: column;

    &[class*="#{$items}-"] {
        &[class*="-right"] {
            @extend %align-end;
        }

        &[class*="-center"] {
            @extend %align-center;
        }

        &[class*="-left"] {
            @extend %align-start;
        }

        &[class*="-bottom"] {
            @extend %justify-end;
        }

        &[class*="-middle"] {
            @extend %justify-center;
        }

        &[class*="-top"] {
            @extend %justify-start;
        }
    }

    .pull-bottom,
    > .pull-start {
        margin-bottom: auto !important;
    }

    .pull-top,
    > .pull-end {
        margin-top: auto !important;
    }
}
