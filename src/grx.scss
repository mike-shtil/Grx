/*!
* Grx - a lightweight flexbox grid
*
* by: Michael (Mike) Shtilerman
* mike-is.me
* distributed under MIT license
*/

////////
//params
////////

$py_row-prefix: row; //prefix to use on row element classes
$py_col-prefix: col; //prefix to use on column element classes
$py_bases: 1 2 3 4 5 6 8 9 10 11 12; //grid width fraction denominators to support
$py_base_default: 12; //default grid base, used when no base is specified
$py_gutters: ( xs: 0.5rem, sm: 1rem, md: 2rem, lg: 4rem, xl: 8rem ); //params - gutter - vertical and horizontal separating columns (should be >= 0)
$py_breakpoints: ( sm: 768px, md: 992px, lg: 1200px ); //breakpoints for media queries - mobile first

/////
//row
/////

[class*=#{$py_row-prefix}] {
    display: flex;
    align-items: stretch;
    box-sizing: border-box;
    ////////
    //gutter
    ////////
    @each $name, $value in $py_gutters {
        &[class*=gutter-#{$name}] {
            margin: -$value/2;
            > [class*=#{$py_col-prefix}] {
                padding: $value/2;
            }
        }
    }
}

////////
//column
////////

[class*=#{$py_row-prefix}] > [class*=#{$py_col-prefix}] {
    // flex-grow: 0;
    // flex-shrink: 1;
    box-sizing: border-box;
}
//default (null) breakpoint
@media all and (min-width: 0) {
    //default base
    [class*=#{$py_row-prefix}] {
        @for $n from 1 through $py_base_default {
            > .#{$py_col-prefix}-#{$n} {
                flex-basis: percentage($n / $py_base_default);
            }
        }
        //dynamic bases
        @each $base in $py_bases {
             @for $n from 1 through $base{
                > .#{$py_col-prefix}-#{$n}-#{$base} {
                    flex-basis: percentage($n / $base);
                }
            }
        }
    }
}
//dynamic breakpoints
@each $bpname, $bpvalue in $py_breakpoints {
     @media all and (min-width: #{$bpvalue}){
        [class*=#{$py_row-prefix}] {
            //default base
            @for $n from 1 through $py_base_default {
                > .#{$py_col-prefix}-#{$bpname}-#{$n} {
                    flex-basis: percentage($n / $py_base_default);
                }
            }
            //dynamic bases
            @each $base in $py_bases {
                 @for $n from 1 through $base{
                    > .#{$py_col-prefix}-#{$bpname}-#{$n}-#{$base} {
                        flex-basis: percentage($n / $base);
                    }
                }
            }
        }
    }
}
.#{$py_col-prefix}-auto {
    //column which takes up entire remaining free space (width) in the row
    flex: 2 2 auto;
}

/////////////////
//general element
/////////////////

[class*=#{$py_col-prefix}],
[class*=#{$py_row-prefix}] {
    //justify (horizontal in row)
    &[class*=justify-start] {
        justify-content: flex-start;
        text-align: left;
    }
     &[class*=justify-center],
    %justify-center {
        justify-content: center;
        text-align: center;
    }
    &[class*=justify-end] {
        justify-content: flex-end;
        text-align: right;
    }
    //align (vertical in row)
    &[class*=align-start] {
        display: flex;
        align-items: flex-start;
    }
     &[class*=align-center],
    %align-center {
        display: flex;
        align-items: center;
    }
    &[class*=align-end] {
        display: flex;
        align-items: flex-end;
    }
    &[class*=stretch] {
        align-items: stretch;
    }
    //align and justify
    &[class^=center], &[class*=' center'] {
      //more speciifc tag, prevents also selecting align-center or justify-center
        @extend %justify-center;
        @extend %align-center;
    }
    &[class*=wrap] {
        flex-wrap: wrap;
    }
    &[class*=pull-end] {
        margin-left: auto !important;
    }
    &[class*=pull-start] {
        margin-right: auto !important;
    }
    //flip direction to column
    &[class*=dir-column] {
        flex-direction: column;
    }
}
